# This is a frozen state file generated by GNU M4 1.4.4
V1
Q1,1
{}
C2,1
//

T7,137
__echo2ifdef({unix},{
syscmd(echo {"define({__parcount},}__parcount{)"} >>m4_sys)},
{syscmd(echo {define({__parcount},}__parcount{)} >>m4_sys)})
T8,2
SHORTRVS76
T9,2
_AIRCRAFT03
T5,54
_textifelse($1,0,,{$2 00
_text(decr($1),shift(shift($@)))})
T7,91
__termxifelse(substr($1,0,3),{%%%},{7E __byte(substr($1,3)) 20 __word(0x7FFF)},{1A 20 __word($1)})
T8,2
NEWSHIPS39
T9,2
PAPERMILL14
T6,2
NOTICE00
T10,39
ERR_CID255Parameter '255' not allowed in function
T9,35
__ACTION29 02 __FEATURE FF 01 01 00 00 00 00
T6,2
NEWRVS38
T9,5
__lastref00 00
T13,50
test_plttotal81 18 18 FF __byte(__count)
$1 define({__count},0)
T7,103
__dwordsubstr(eval($1,16,8),6,2) substr(eval($1,16,8),4,2) substr(eval($1,16,8),2,2) substr(eval($1,16,8),0,2)
T7,3
A_START254
T14,1
TZ_RESIDENTIAL2
F8,8
translittranslit
T10,63
plt_numrev__plt__(81 40 0C 0F, 81 41 0C 0F, 81 40 8C 0F, 81 41 8C 0F, $@)
T13,34
__postprocess__handleblock($1,__splitblock($2))
T4,1
OIL_3
T4,1
FARM9
T6,1221
skipififelse(
$2,CLIMATE,__NUMBER * 0 07 83 01 _07_conditiontype($3) ifelse($4,TEMPERATE,00,$4,ARCTIC,01,$4,TROPIC,02,$4,TOYLAND,03),
$2,WINDOS,__NUMBER * 0 07 8D 01 _07_conditiontype($3) $4,
$2,PLATFORM,__NUMBER * 0 09 9D 04 _07_conditiontype($3) __dword(__makenumber($4)),
$2,TTDPATCHVERSION,__NUMBER * 0 09 8B 04 _07_conditiontype($3) __decword(__makenumber($4)) __decword(260),
$2,OTTDVERSION,__NUMBER * 0 09 A1 04 _07_conditiontype($3) __dword(__makenumber($4)),
$2,FLAGS,__NUMBER * 0 07 85 01 _07_conditiontype($3) $4,
dnl old:$2,GRFACTIVE,__NUMBER * 0 07 88 04 _07_activationtype($3) $4,
$2,GRFACTIVE,__NUMBER * 0 07 88 ifelse($#,4,04,$#,5,08,{__error(ERR_NUMPAR {$0})}) _07_activationtype($3) $4 $5,
$2,CARGO,__NUMBER * 0 07 88 04 _07_cargoavailable($3) {{"$4"}},
$2,RAILTYPE,__NUMBER * 0 07 88 04 _07_railtypeavailable($3) {{"$4"}},
$2,TRAFFICSIDE,__NUMBER * 0 07 86 01 ifelse($3,==,ifelse($4,LEFT,01,00),ifelse($4,LEFT,00,01)) 04,
$2,PARAMETER,__NUMBER * 0 07 $3 04 _07_conditiontype($4) ifelse(_07_conditiontype($4),00,__sbyte($5),_07_conditiontype($4),01,__sbyte($5),{{__dword($5)}}),$2 
// load complete "patchvar" statement and .. 
__NUMBER * 0 07 01 04 _07_conditiontype($3) __dword(__makenumber($4))) __byte($1)
T4,38
skip__NUMBER * 0 07 9A 01 00 00 __byte($1)
T5,28
ifday_days(patsubst($1,{ +},{,}))
T8,100
__makehiifelse(eval(__wordflag == 0),1,FF,eval(__wordflag == 1),1,FF FF,eval(__wordflag == 2),1,FF FF FF FF)
F6,6
substrsubstr
T13,37
deactivateset__NUMBER * 0 0E __byte($#) __scan($@)
T8,53
__doubleifelse(index($1,+),-1,$1,{$1 substr($1,index($1,+))})
T11,88
__autorefitcbr(eval(
ifelse($2,{%},{__clamp(eval(255*$1/100),0,255)},{__clamp($1,0,255)}) | 16384))
T4,2
CRLF0d
T18,554
__a_notransparency__tileCOUNT dnl
ifelse(dnl
$#,2,{__word(0x42d + $1) __word(0xC000)  00 00  $2},
$#,3,{ifelse($3,TTD,__word($1) 00 40  00 00  $2,
__word(0x42d + $1) __word(0xC000)  00 00  $2  $3)},
$#,4,{ifelse($4,TTD,{__word($1) 00 40  00 00  $2  $3},
{__word(0x42d + $1) __word(0xC000)  __word($3)  $2  $4})},
$#,5,{ifelse($3,TTD,{__word($1) 00 40  __word($4)  $2  $5},
{__word(0x42d + $1) __word(0xC000)  __word($4)  $2  $3  $5})},
$#,6,{ifelse($4,TTD,{__word($1) __word(0xC000)  __word($5)  $2  $3  $6},
{__error(ERR_INVALID "{$0}")})},
{__error(ERR_NUMPAR "{$0}")}) 
T4,2
VALU10
T12,21
__splitblockpatsubst($1,{
},{
,})
T12,39
ERR_NOPARDEFGRF {parameter} not defined in function
T6,32
dxdydz__byte($1) __byte($2) __byte($3)
T12,50
anim_trigger81 18 00 7F __byte(__count)
$1 define({__count},0)
T4,2
BATT19
T12,53
tinfo_height81 67 $1 10 ff __byte(__count)
$2 define({__count},0)
T5,2
T_RED8B
T7,1
LC_RAIL1
T4,1
EAST4
T7,17
reftilecbr(__double($1))
F5,5
ifdefifdef
T6,63
__fillifelse(eval($1 > $2),1,,{__byte($1) __fill(incr(eval($1)),$2)})
T15,99
randomttdspritedefine({__hidden},
{1A 20 07 03 00 00 00 5F 28 __mask(_term2($1)) 00 00 00 00}) __start(_term2($1))
T12,97
__byte2dword__ref($1) __dword(__byteval1($1)) ifelse(__byteval2($1),0xff,FF FF FF FF,__dword(__byteval2($1)))
T9,1
AI_STATID0
T8,3
AUTORAIL-19
T21,23
_07_railtypeavailableifelse($1,+,0E,$1,-,0D)
T4,2
PAPR11
T8,1
LC_WATER6
T5,55
_loopifelse($1,eval($1 >0),,{__byte($2) _loop(decr($1),$2)})
T9,2
_11_label73
T7,2
T_GREEN8F
T7,1
SAWMILL2
T21,251
_addanimationtriggersifelse({$1},{},{_0_mask define({_0_mask},0)},
{define({_0_mask},eval(_0_mask+
         ifelse($1,BUILT,0x01,$1,NEWCARGO,0x02,$1,NOCARGO,0x04,
         $1,ARRIVE,0x08,$1,LEAVE,0x10,$1,LOADING,0x20,$1,PERIODIC,0x40)
)) _addanimationtriggers(shift($@))})
T14,336
__incrbasecost__NUMBER * 0 00 08 01 01 __byte($1) 08 ifelse(eval($2),1,08,eval($2),2,09,eval($2),4,0a,eval($2),8,0b,eval($2),16,0c,eval($2),32,0d,eval($2),64,0e,eval($2),128,0f,eval($2),0,07,eval($2),-1,08,eval($2),-2,07,eval($2),-4,06,eval($2),-8,05,eval($2),-16,04,eval($2),-32,03,eval($2),-64,02,eval($2),-128,01,{__error(ERR_INVALID {$0}: '$2')})
T11,50
test_numrev81 10 0C 0F __byte(__count)
$1 define({__count},0)
F6,6
m4exitm4exit
T9,2
NEWTRAINS37
T10,166
defgrftext
__NUMBER * 0 04 __FEATURE __language($2) __byte(__npar(shift(shift($@)))) __word(eval(0xD000+$1)) dnl  <-----------
_text(__npar(shift(shift($@))),shift(shift($@)))

T14,80
__setrefitcostcbr(eval(
ifelse($2,{%},{__clamp(eval(255*$1/100),0,255)},{__clamp($1,0,255)})))
T12,2
_ROADVEHICLE01
T13,303
definestation dnl
define({_0_mask},0) dnl
ifdef({_0_numstat},,{__error(ERR_NOSTATCLASS "{$0()}")})
__NUMBER * 0  00 04 __byte(_0_count) __byte(_0_numstat) __byte($1)
        $3
define({_0_count},0) dnl reset prop counter
__NUMBER * 0  04 04 FF __byte(_0_numstat) __byte($1) C5 __scandotext($2)
undefine({_0_numstat})
T6,13
setbit__sumbits($1)
T12,133
__n_recolourifelse(substr($2,6,2),80,
$2 00 00 00 __word(0x842D + $1) __defaultglass($3), dnl SHARE
$2 $3 __word(0x842D + $1) __defaultglass($4))
T18,82
_animationtriggersifelse({$1},{},,{__word(_addanimationtriggers($1)) _animationtriggers(shift($@))})
T11,63
__scanbyte2ifelse({$1},{},,{__byte($1) __byte($1) __scanbyte2(shift($@))})
T12,153
cargowaiting dnl
ifelse($#,2,{85 60 __byte($1) 00 FF FF __byte(__count)
__postprocess(1,$2)},{__error(ERR_NUMPAR "{$0}")})
define({__count},0) define({__wordflag},0)
T7,329
asl_offdnl
define({tile}, defn({__n_tile}))dnl
define({layout}, defn({__n_layout}))dnl
define({ground}, defn({__n_ground}))dnl
define({regular}, defn({__n_normal}))dnl
define({notransp}, defn({__n_notransp}))dnl
define({compcol}, defn({__n_compcol}))dnl
define({glass}, defn({__n_glass}))dnl
define({recolour}, defn({__n_recolour}))dnl

T6,58
_printifelse($#,4,_printdouble($1,$3,$2,$4),_printsingle($1,$2))
F8,8
sincludesinclude
T7,48
__clampifelse(eval($1 < $2),1,$2,eval($1 > $3),1,$3,$1)
T10,32
setdefault"B" "DFLT" __word(4) __dword($1)
T5,47
pcalc_pcalc(translit(patsubst($1,{ +},{ }),{ },{,}))
T13,20
insertcomment__NUMBER * 0 0C "$1"
T11,51
displaymode81 10 00 FF __byte(__count) 
$1 define({__count},0)
F4,4
decrdecr
T21,113
cargotranslationtable__NUMBER * 0 00 08 01 __byte($#) 00 09
translit({$@},{,},{ }) syscmd(ifdef({unix},rm,del) m4_ctt) __scantable($@)
T5,55
_moreifelse($1,{},,{
 __lastref _term($1) _more(shift($@))})
T5,147
__forifelse(eval($# != 4),1,{__error(ERR_NUMPAR {forloop})},{ifelse(eval($2<=$3),1,
{pushdef({$1},$2)$4{}popdef({$1})$0({$1},incr(eval($2)),$3,{$4})})})
T1,2
115
T8,138
plt_axisifelse($#,1,{81 40 18 01 __byte(__count)
$1 define({__count},0)},81 {ifelse($1,_SELF,41,40) 18 01 __byte(__count)
$2 define({__count},0)})
T9,4
OFFSET_XY0x10
T15,4
OFFSET_RCSPRITE0x04
T10,545
__a_normal__tileCOUNT dnl
ifelse(dnl
$#,2,{__word(0x42d + $1) __word(0x8000)  00 00  $2},
$#,3,{ifelse($3,TTD,__word($1) 00 00  00 00  $2,
__word(0x42d + $1) __word(0x8000)  00 00  $2  $3)},
$#,4,{ifelse($4,TTD,{__word($1) 00 00  00 00  $2  $3},
{__word(0x42d + $1) __word(0x8000)  __word($3)  $2  $4})},
$#,5,{ifelse($3,TTD,{__word($1) 00 00  __word($4)  $2  $5},
{__word(0x42d + $1) __word(0x8000)  __word($4)  $2  $3  $5})},
$#,6,{ifelse($4,TTD,{__word($1) 00 00  __word($5)  $2  $3  $6},
{__error(ERR_INVALID "{$0}")})},
{__error(ERR_NUMPAR "{$0}")}) 
T13,1
TZ_COMMERCIAL3
T6,89
layout__NUMBER * 0 00 04 01 01 __byte($1) 09 __xbyte(_0_layouts)
$2
define({_0_layouts},0) dnl

T10,54
_animationifelse({$1},{},,{_makeparm($1) _animation(shift($@))})
F8,8
errprinterrprint
T9,183
__setregsdnl
ifelse($#,2,{__termx($2) 0E 1A 00 __word($1)},{dnl
ifelse($2,-,{__setregs(incr($1),shift(shift($@)))},
{__termx($2) 0E 1A 20 __word($1) 0F __setregs(incr($1),shift(shift($@)))})})
T8,1
__makelo0
T10,3
COASTTILES-13
T13,5
TTD_ROOFRIGHT{6,7}
T4,1
PASS0
T1,2
925
T14,50
test_pltlength81 18 10 FF __byte(__count)
$1 define({__count},0)
T13,52
__scanaddlistifelse($1,{},0,{eval($1 +__scanaddlist(shift($@)))})
T11,39
_1_sprCOUNTdefine({_1_sprcount},incr(_1_sprcount))
T10,50
test_slope81 10 00 0F __byte(__count)
$1 define({__count},0)
T10,20
setfeaturedefine(__FEATURE,$1)
T6,16
reftxt__byte(_T_$1) D0
T10,63
plt_midpos__plt__(81 46 00 0F, 81 47 00 0F, 81 46 80 0F, 81 47 80 0F, $@)
T20,316
_addsetcargotriggersifelse({$1},ALLCARGO,ff ff ff ff,{$1},{},{__word(_0_mask0) __word(_0_mask1) define({_0_mask0},0) define({_0_mask1},0)},
{ifelse({$1},NONE,{__dword(0)},{ifelse(eval(($1-15)>0),1,
{define({_0_mask1},eval(_0_mask1+eval(1<<($1-16))))},
{define({_0_mask0},eval(_0_mask0+eval(1<<$1)))}) _addsetcargotriggers(shift($@))})})
T7,49
__xbyteifelse(eval($1 > 254),1,ff __word($1),__byte($1))
T11,1
_1_setcount0
T9,50
test_size81 10 10 FF __byte(__count)
$1 define({__count},0)
T11,116
makestation__NUMBER * 0 03 04 ifelse($#,2,{01 __byte($1) __byte(_3_count)
	$2},{00  __byte(_3_count)
	$1})
define({_3_count},0)
T7,60
_0_WORDsubstr(eval($1,16,4),2,2) substr(eval($1,16,4),0,2) _0_COUNT
F4,4
defndefn
T10,127
stationage85 00 20 FF FF  01 FA 20 FF FF  08 1A 00 6D 01  __byte(__count) 
__postprocess(1,$1) define({__count},0) define({__wordflag},0)
F5,5
indexindex
T8,1
LC_TREES4
F6,6
divertdivert
T9,2
NEWSOUNDS70
T9,18
setvalues"C" "VA{}LU" $1 00
T2,42
if_term($1) ifelse($#,1,,{_more(shift($@))})
T10,111
__calcscanifelse({$1},{},,{ifelse($#,1,__process(__compress($1),00),__process(__compress($1),32)) __calcscan(shift($@))})
T8,50
snowline81 20 00 FF __byte(__count)
$1 define({__count},0)
T10,89
__n_layout__NUMBER * 0 00 04 01 01 __byte($1) 09 __xbyte(_0_layouts)
$2
define({_0_layouts},0) dnl

T7,1
_0_mask0
T5,1
BUILT0
T12,65
setregisters85 __setregs($1,$2) 01
$3 00 00 00 00
$3 else define({__count},0)
T7,1
LOADING5
T6,13
__byteeval($1,16,2)
T6,4
PGOODS0x20
T3,1
NMF2
T13,2
NEWINDUSTRIES67
T4,1
FLAT0
T7,28
ERR_IOPInvalid operator in function
T12,25
setbaselabeldefine({__spritebase},$1)
T8,25
__hibytesubstr(eval($1,16,4),0,2)
T12,1
TZ_OUTSKIRTS0
T12,3
TRACKRESERVE-15
T4,1
WATR1
T8,5
CB_SLOPE0x149
T11,50
test_pltnum81 18 08 FF __byte(__count)
$1 define({__count},0)
T7,107
compcolifelse(substr($2,6,2),80,
$2 00 00 00 __word(0x842D + $1) 00 00, dnl SHARE
$2 $3 __word(0x842D + $1) 00 00)
T11,1
__tilecount0
F6,6
syscmdsyscmd
T10,11
__firstveh__xbyte($1)
T12,50
cargotrigger81 18 08 FF __byte(__count)
$1 define({__count},0)
T11,4
RUN_ENGINES0x2C
T15,26
ERR_NOSTATCLASSMissing station {class} in
T13,2
FREIGHTTRAINS58
T12,44
ERR_WORDSIZEWORD-size values in block needed by function
T10,6
RCT_DIESEL0x4c36
T4,2
FIZZ26
T6,1
WC_SEA1
T12,16
ERR_BYTESIZEBYTE value > 255
T10,2
COPPERMINE10
T11,58
spritelayer81 10 08 FF __byte(__count)
        $1 define({__count},0)
T4,94
year85 24 00 FF FF __byte(__count)
__postprocess(1,$1) define({__count},0){}define({__wordflag},0)
F5,5
indirindir
T13,33
snowlinetable__NUMBER * 0 00 08 01 01 00 10
$1
T10,50
dayofmonth81 02 08 1F __byte(__count)
$1 define({__count},0)
T5,24
store810E1A00{}__byte($1){}0F
T16,33
setcargotriggers12 _0_COUNT _setcargotriggers($@)
T8,1
NEWCARGO1
T14,18
setdescriptiongrfdescription($@)
F4,4
evaleval
T7,25
__xtrim{0x}{}translit($1,{ },{})
T10,178
__languageifelse($1,US,80,$1,UK,81,$1,D,82,$1,F,83,$1,E,84,$1,RUS,87,$1,SRB,8D,$1,NL,9F,$1,H,A4,$1,I,A7,$1,S,AE,$1,PL,B0,$1,HR,B8,$1,N,AF,$1,CZ,95,$1,ALL,FF,{__error(ERR_NOLANGUAGE {$0})})
T6,15
__mask__byte($3 - $1)
T12,53
tinfo_lclass81 67 $1 18 0f __byte(__count)
$2 define({__count},0)
T11,3
FLAGSPRITES-20
T10,61
subroutine81 7E __byte($1) 00 FF __byte(__count)
$2 define({__count},0)
T6,11
parent__PARENT,$@
T12,230
_addflagbitsifelse({$1},{},{_0_mask define({_0_mask},0)},
{define({_0_mask},eval(_0_mask+
       ifelse($1,GROUNDSPRITES,0x01,$1,DIVAMOUNT,0x02,$1,RANDOMBITS,0x04,
        $1,FOUNDATIONS,0x08,$1,XFOUNDATIONS,0x10)
)) _addflagbits(shift($@))})
T8,1
PERIODIC6
T4,0
else
T6,39
__scanifelse({$1},{},,{$1 __scan(shift($@))})
T10,4
RUN_WAGONS0x2E
F5,5
shiftshift
T12,264
plt_indexrevifelse($#,1,{81 40 24 0F 0E 1A 20 00 0F 40 28 F0 0C 7D 00 00 FF __byte(__count)
$1 define({__count},0)},{ifelse($1,_SELF,81 41 24 0F 0E 1A 20 00 0F 41 28 F0 0C 7D 00 00 FF,81 40 24 0F 0E 1A 20 00 0F 40 28 F0 0C 7D 00 00 FF) __byte(__count)
$2 define({__count},0)})
T6,5
POWDER0x800
T13,1
PBSUNRESERVED4
T10,32
grfversion"B" "VRSN" __word(4) __dword($1)
T4,1
PLAS9
T7,63
plt_num__plt__(81 40 08 0F, 81 41 08 0F, 81 40 88 0F, 81 41 88 0F, $@)
T10,3
NEWSIGNALS-14
F7,7
traceontraceon
T9,2
FOODPLANT13
T13,101
tinfo_terrainifelse($#,1,{81 42 00 0F __byte(__count)
$1},{81 67 $1 0A 07 __byte(__count)
$2}) define({__count},0)
T6,19
__trimtranslit($1,{ },{})
T4,4
SKIP0x01
T4,2
FRUT13
T10,38
ERR_NUMPARWrong number of parameters in function
T10,31
__REVISION"m4nfo stations r28 16.05.2018"
T12,15
textmode_offchangecom({//})
F6,6
regexpregexp
T10,70
grfsetting"C" __dword(__14numsets)
$1
00 define({__14numsets},incr(__14numsets))
T7,2
default$1
T9,3
SPR_COUNT254
F9,9
changecomchangecom
T9,2
STARTYEAR0B
T12,256
anim_counterifelse($#,1,{85 0A 00 FF FF __byte(__count)
__postprocess(1,$1) define({__count},0) define({__wordflag},0)},$#,2,{85 0A ifelse(len($1),5,$1 00,$1) __byte(__count)
__postprocess(1,$2) define({__count},0) define({__wordflag},0)},{__error(ERR_NUMPAR "{$0}")})
T12,99
__word2dword__ref($1) __dword(__wordval1($1)) ifelse(__wordval2($1),0xffff,FF FF FF FF,__dword(__wordval2($1)))
T8,144
__parvalifelse(substr($1,0,3),_p_,{__byte(substr($1,3))},dnl
ifelse(__checknumber($1),0,{FF{}define(__val,$1)},dnl
{{__error(ERR_NOPARDEF {"pcalc"})}}))
T6,101
__echoifdef({unix},{
syscmd(echo {"define({$1},$2)"} >>m4_ctt)},
{syscmd(echo {define({$1},$2)} >>m4_ctt)})
T3,2
WIN01
T9,3
TWOCCMAPS-10
T8,36
ERR_UNITInvalid unit {parameter} in function
T12,57
__addtoshift__byte($1 + {0x}substr($2,0,2)) __checkword(substr($2,3))
T15,50
tinfo_tracktype81 42 08 FF __byte(__count)
$1 define({__count},0)
T14,2
VARRUNNINGCOST7E
T16,4
RESOLVE_RCSPRITE0x80
F7,7
esyscmdesyscmd
F7,7
builtinbuiltin
T10,221
_addCBbitsifelse({$1},{},{_0_mask define({_0_mask},0)},
{define({_0_mask},eval(_0_mask+
        ifelse($1,CB_AVAILABLE,0x01,$1,CB_LAYOUT,0x02,$1,CB_AFRAME,0x04,
        $1,CB_ASPEED,0x08,$1,CB_SLOPE,0x10)
)) _addCBbits(shift($@))})
T7,62
__rangeifelse($#,1,$1 ,__fill(__makenumber(0x$1),__makenumber(0x$2)))
T8,1
_0_count0
T7,2
T_BLACK98
F4,4
incrincr
T15,22
exclude_lengths0D _bits1($@) _0_COUNT
T11,4
BUILD_CANAL0x3C
T7,0
__gnu__
T12,4
BUILD_WAGONS0x10
F8,8
maketempmaketemp
T11,549
__a_compcol__tileCOUNT dnl
ifelse(dnl
$#,2,{__word(0x842d + $1) 00 00  00 00  $2},
$#,3,{ifelse($3,TTD,__word(0x8000 + $1) 00 80  00 00  $2,
__word(0x842d + $1) 00 80  00 00  $2  $3)},
$#,4,{ifelse($4,TTD,{__word(0x8000 + $1) 00 80  00 00  $2  $3},
{__word(0x842d + $1) 00 80  __word($3)  $2  $4})},
$#,5,{ifelse($3,TTD,{__word(0x8000 + $1) 00 80  __word($4)  $2  $5},
{__word(0x842d + $1) 00 80  __word($4)  $2  $3  $5})},
$#,6,{ifelse($4,TTD,{__word(0x8000 + $1) 00 80  __word($5)  $2  $3  $6},
{__error(ERR_INVALID "{$0}")})},
{__error(ERR_NUMPAR "{$0}")}) 
T6,2
_SOUND0c
T6,20
_term1patsubst($1,{ +},{})
T4,2
BUBL24
T6,26
_term2patsubst($1,{\.\.},{,..,})
T5,36
__absifelse(eval($1<0),1,eval(0 - $1),$1)
T8,1
REFINERY4
F6,6
definedefine
T6,49
_term3ifelse($#,3,{$@},{patsubst($1,{\(<\|>\)},{\1,})})
F8,8
undivertundivert
T10,29
placelabel__NUMBER * 0 10 __byte(_L_$1)
T15,24
include_lengths0D _nobits1($@) _0_COUNT
T9,1
_11_count0
T14,4
RESOLVE_SPRITE0x40
T9,106
__replaceifelse(__term($1),{},MAP,{pushdef({MAP},patsubst(MAP,__term($1),__term($2))) __replace(shift(shift($@)))})
T7,1
WC_LAND0
T5,24
xyoff__byte($1) __byte($2) 80
T4,5
UTF8C3 9E
T12,33
ERR_NOWEIGHTWeight required for TE definition
T9,36
ERR_RANGEParameter out of {range} in function
T4,1
TRUE1
T12,68
grf_override__NUMBER * 0   00 08 01 __byte(__count) 00 11
$1 define({__count},0)
T4,1
STEL9
F6,6
m4wrapm4wrap
T16,89
getcolour_pluscc85 7F __byte(incr(__parcount)) 20 FF FF 00 1A 20 __word($1) 0C 1A 00 00 40 00 __word(255)
T9,94
dayofyear85 02 10 FF 01 __byte(__count)
__postprocess(1,$1) define({__count},0){}define({__wordflag},0)
T6,1
OILRIG5
T10,63
plt_midnum__plt__(81 46 04 0F, 81 47 04 0F, 81 46 84 0F, 81 47 84 0F, $@)
T7,119
_nobitsifelse({$1},{},,{$1},TTD_NONE,{__byte(255) _nobits(shift($@))},{__byte(eval(255 & ~__sumbits($1))) _nobits(shift($@))})
T8,1
_0_mask00
T9,4
RUN_STEAM0x2A
T14,2
ARTICULATEDRVS77
T8,1
_0_mask10
T6,32
nibble0x{}eval($2,16,1){}eval($1,16,1)
T8,1
LEFTHAND0
F9,9
debugfiledebugfile
T15,50
exclusiverights81 F4 00 FF __byte(__count)
$1 define({__count},0)
T12,5
CB_AVAILABLE-0x13
T15,51
AI_stationwidth81 88 04 0F __byte(__count) 
$1 define({__count},0)
T4,8
self_SELF,$@
T13,50
cargo_trigger81 18 08 FF __byte(__count)
$1 define({__count},0)
T9,55
__inflateifelse($1,{},,{substr($1,0,2) __inflate(substr($1,2))})
T13,37
__anim2randomifelse(eval($1<32),1,eval($1 >>1),$1)
T7,1
NOCARGO2
F6,6
divnumdivnum
T12,47
__mixed2word__ref($1) __word(__byteval1($1)) substr($1,9,5)
T7,374
grfinit
__NUMBER * 0 14 "C" "INFO"
"B" "NPAR" __word(1) __byte(__14numsets)
$2
00 00
__NUMBER * 0 08 __VERSION $1 __savename 00 __savedesc 00
__NUMBER * 0 0C __REVISIONHEAD
__NUMBER * 0 0C __REVISION
dnl init CB fail
ifelse(__FEATURE,06,{},__NUMBER * 4 01 __FEATURE 01 00
__NUMBER * __ACTION2)
dnl old: syscmd(echo {define({__parcount},}__parcount{)} >>foo)
syscmd(__echo2() >>foo)
T8,1
_3_count0
T4,4
TRVL0x01
F11,11
changequotechangequote
T10,89
__a_layout__NUMBER * 0 00 04 01 01 __byte($1) 1A __xbyte(_0_layouts)
$2
define({_0_layouts},0) dnl

T11,129
tinfo_slope81 67 ifelse($#,3,{$1 $2 __byte(__count)
$3},$#,2,{$1 00 FF __byte(__count)
$2},{__error(ERR_NUMPAR "{$0}")}) define({__count},0)
T9,73
animframeifelse($#,1,cbr($1),$#,2,cbr(256*$2+$1),{__error(ERR_NUMPAR {$0}: {$1})})
T9,54
_makeparm__byte(decr($1)) __byte(ifelse($2,LOOP,1,$2,NOLOOP,0))
T10,25
grfblitter"B" "BLTR" __word(1) "$1"
T10,62
__incrwordifelse(substr($1,0,1),w,w){}incr(substr($1,incr(index($1,w))))
T11,5
CB_ACONTROL0x140
T3,26
pos__nibble($2){}__nibble($1)
T8,0
__hidden
T12,66
__exportloopifelse({$1},{},,{{define(_T_$1,}_T_$1{)}
__exportloop(shift($@))})
T10,61
__bytewordifelse(eval($1 > 254 || $1<0),1,__word(__abs($1)),__byte($1))
F8,8
__file____file__
T7,2
T_LBLUE95
T5,2
_SHIP02
T6,2
CANALS56
T10,63
_callbacksifelse({$1},{},,{__byte(_addCBbits($1)) _callbacks(shift($@))})
T5,1
TRUCK4
T13,99
setgrfversionifelse($1,7,{define({__VERSION},07)},$1,8,{define({__VERSION},08)},{__error(ERR_INVALID {$0: $1})})
T7,169
regularifelse(substr($2,6,2),80,
$2 00 00 00 ifelse($3,TTD,__word($1) 00 80,__word(0x42D + $1) 00 00), dnl SHARE
$2 $3 ifelse($4,TTD,__word($1) 00 80,__word(0x42D + $1) 00 00))
T14,146
__bytewordflagifelse(eval($1 > 0xFFFF),1,{__dword($1){}define({__wordflag},2)},eval($1 > 0xFF || $1<0),1,{__word(__abs($1)){}define({__wordflag},1)},__byte($1))
T9,34
autorefit__autorefit(patsubst($1,{ +},{,}))
T5,100
_bitsifelse({$1},{},,{$1},TTD_NONE,{__byte(0) _bits(shift($@))},{__byte(__sumbits($1)) _bits(shift($@))})
T13,49
__byte2dword2__ref($1) __dword(__byteval1($1)) substr($1,9,11)
T11,50
test_pltpos81 18 00 FF __byte(__count)
$1 define({__count},0)
T4,53
loadifelse($1,{},{00{,}{}},{__byte($#){,}__scanword($@)})
T7,2
SIGNALS-4
T9,6
RCT_PLANE0x4c42
T17,175
shiftmask_add_modifelse($#,4,__byte($1+0x80) ifelse(eval($2>255),1,{define({__wordflag},1) __word($2) __word($3) __word($4)},{__byte($2) __byte($3) __byte($4)}),{__error(ERR_NUMPAR {$0}: $1)})
T13,128
test_tiletype81 10 ifelse($#,2,{__byte(0x18 + substr($1,0,index($1,{ }))) __byte(__count)
$2},{18 07 __byte(__count)
$1}) define({__count},0)
T11,69
allocspritedefine({__hidden},{7F __byte(incr(__parcount)) 20 FF FF FF FF 00}) $1
T6,5
HAZARD0x100
T8,132
rerandomifdef({_R_$1},{80 __get2(_R_$1) __byte(__get3(_R_$1)) __countdown(__get3(_R_$1), __remove_crlftab($2)},{__error(ERR_LABEL "{$0}")}))
T6,2
_CANAL05
T6,1
TROPIC4
T15,107
tinfo_flatwater81 67 $1 29 01 0A 1A 20 20 0E 1A 20 00 0F 67 $1 20 1F 0C 7D 00 00 FF __byte(__count)
$2 define({__count},0)
T12,1
POWERSTATION1
T9,26
anim_info16 _animation($@) _0_COUNT
T9,13
spriteset_print($1,$2)
T11,6
RCT_ROADVEH0x4c48
T3,169
GRM__NUMBER * 0 0D 04 00 ifelse($1,RESERVE,00,$1,FIND,01,$1,CHECK,02,$1,MARK,03,$1,NFIND,04,$1,NCHECK,05,$1,OWNER,06,{__error(ERR_INVALID {$1})}) FE FF __FEATURE __word($2)
T7,2
T_BROWN93
T4,2
RUBR16
T8,4
OFFSET_Z0x20
T9,26
callbacks0B _0_COUNT _callbacks($@)
T8,24
__upcasetranslit($1,[a-z],[A-Z])
T14,24
include_widths0C _nobits1($@) _0_COUNT
T13,129
__sumbitswordifelse({$1},{},{_0_mask define({_0_mask},0)},
{define({_0_mask},eval(_0_mask+(65535 & (1<<decr($1))))) __sumbitsword(shift($@))})
T4,4
REEF0x80
T7,63
plt_pos__plt__(81 40 00 0F, 81 41 00 0F, 81 40 80 0F, 81 41 80 0F, $@)
T9,2
_INDUSTRY0a
T13,50
timesinceload81 EC 00 FF __byte(__count)
$1 define({__count},0)
T3,99
refifelse(eval($1 == 255),1,{__error(ERR_CID255 {$0})},{define({__lastref},{__word($1)}){}__word($1)})
T11,29
__checkwordifelse(__wordflag,1,$1 00,$1)
F6,6
sysvalsysval
T11,50
test_length81 10 10 0F __byte(__count)
$1 define({__count},0)
T7,42
__errorerrprint(__file__:__line__ {$1
})m4exit(1)
F8,8
undefineundefine
T11,2
NEWSTATIONS52
T10,2
T_REDBROWN92
T9,26
threshold10 __scanword($@) _0_COUNT
T9,2
LC_OBJECT10
T8,74
_nobits1ifelse({$1},{},,{__byte(eval(255 & ~__sumbits1($1))) _nobits1(shift($@))})
F7,7
dumpdefdumpdef
T8,50
test_num81 10 08 0F __byte(__count)
$1 define({__count},0)
T10,124
__sumbits1ifelse({$1},{},{_0_mask define({_0_mask},0)},
{define({_0_mask},eval(_0_mask+(255 & (1<<decr($1))))) __sumbits1(shift($@))})
T8,53
__nibbleifelse(eval($1 < 0),1,eval(16+$1,16,1),eval($1,16,1))
T9,4
DEL_CANAL0x3D
T9,264
plt_indexifelse($#,1,{81 40 20 0F 0E 1A 20 00 0F 40 24 F0 0C 7D 00 00 FF __byte(__count)
$1 define({__count},0)},{ifelse($1,_SELF,81 41 20 0F 0E 1A 20 00 0F 41 24 F0 0C 7D 00 00 FF,81 40 20 0F 0E 1A 20 00 0F 40 24 F0 0C 7D 00 00 FF) __byte(__count)
$2 define({__count},0)})
T14,89
_scanclampbyteifelse({$3},{},,{__byte(__clamp($3,$1,$2)) _scanclampbyte(0,16,shift(shift(shift($@))))})
T5,2
FATAL03
T4,4
BULK0x10
T11,100
gendertable__NUMBER * 0 00 08 01 01 __byte(0{x}{}__language($1)-0x80) 13 01 6d 00 02 77 00 03 6e 00 04 70 00 00
T5,63
_daysifelse($#,1,__word($1) __word($1),__word($1) __word($3)) _COUNT
T9,2
__VERSION08
T9,24
ttdspritedefine({__hidden},{}) $1
T9,117
__sumbitsifelse({$1},{},{_0_mask define({_0_mask},0)},
{define({_0_mask},eval(_0_mask+(255 & (1<<$1)))) __sumbits(shift($@))})
T5,14
__refsubstr($1,0,5)
T8,29
_numsetseval(1+ ($1 / (SPR_COUNT+1)))
T10,34
__wordval1__hex2word(__trim(substr($1,6,5)))
T10,35
__wordval2__hex2word(__trim(substr($1,12,5)))
T18,169
__n_notransparencyifelse(substr($2,6,2),80,
$2 00 00 00 ifelse($3,TTD,__word($1) 00 C0,__word(0x42D + $1) 00 40), dnl SHARE
$2 $3 ifelse($4,TTD,__word($1) 00 C0,__word(0x42D + $1) 00 40))
T10,34
__wordval3__hex2word(__trim(substr($1,9,5)))
T11,5
CB_TILETYPE-0x24
T6,30
import
divert(-1)
include($1)
divert
T10,18
__byteval1{0x}substr($1,6,2)
T13,87
setrefreshbox__NUMBER * 9 0D ifelse($1,left,93,$1,right,94,$1,up,95,$1,down,96) 00 FF FF __dword($2)
T13,61
freetextlabelifelse({$1},{},,{undefine({_T_$1}) freetextlabel(shift($@))})
T10,18
__byteval2{0x}substr($1,9,2)
T9,1
TZ_CENTRE4
T8,134
maketextdnl
__NUMBER * 0 04 04 __language($2) __byte(__npar(shift(shift($@)))) __word($1) dnl
_text(__npar(shift(shift($@))),shift(shift($@)))
T7,3
__label224
T11,54
__cutatcrlfifelse(index($1,{
}),-1,$1,substr($1,0,index($1,{
})))
T12,5
TTD_PLATFORM{0,1}
T6,73
exportsyscmd(echo {define({_T_count},}_T_count{)}
__exportloop(shift($@)) >>$1)
T11,73
animcontrolifelse($#,1,cbr($1),$#,2,cbr(256*$2+$1),{__error(ERR_NUMPAR {$0}: {$1})})
T7,151
xsubstrifelse($#,0,{{$0}},dnl
$#,2,{xsubstr($@,eval(len({$1})-$2))},dnl
{ifelse(eval($3<=0),1,,dnl
{substr({$1},$2,1){}xsubstr({$1},eval($2+1),eval($3-1))})})
T10,62
__decrwordifelse(substr($1,0,1),w,w){}decr(substr($1,incr(index($1,w))))
T6,3
A_STOP255
T9,35
__COUNTUPdefine({__CTindex},incr(__CTindex))
T5,2
ERROR02
T15,3
AIRPORTGRAPHICS-16
T12,73
stationnamesifelse({$2},{},,{_stationnames($1,$2) stationnames($1,shift(shift($@)))})
T11,107
__n_compcolifelse(substr($2,6,2),80,
$2 00 00 00 __word(0x842D + $1) 00 00, dnl SHARE
$2 $3 __word(0x842D + $1) 00 00)
T14,99
__mixed2dword2__ref($1) __dword(__byteval1($1)) ifelse(__wordval3($1),0xffff,FF FF FF FF,__dword(__wordval3($1)))
T9,2
_RAILTYPE10
T11,2
T_GRAYGREEN8D
T7,2
T_DGRAY96
T9,2
RIGHTHAND16
T12,1
__spritebase0
T13,281
__handleblockifelse({$2},{},,{dnl
define({__commentstart},ifelse(eval(index($2,{//}) == -1),1,len($2),index($2,{//})))dnl
__handleblockentry($1,len(__trail(substr($2,0,__commentstart))),dnl
__trail(substr($2,0,__commentstart)),dnl
substr($2,__commentstart))
__handleblock($1,shift(shift($@)))})
T4,2
SUGR17
T10,1
LC_TERRAIN0
T4,1
EVEN0
T10,2
NEWOBJECTS4A
T9,50
game_mode81 12 00 FF __byte(__count)
$1 define({__count},0)
T9,115
__extractdnl
define({__var},{xsubstr({$1},eval(index({$1},{"})+1),4)})dnl
define(__var,__CTindex)dnl
__echo(__var,__CTindex)
T8,33
_T_COUNTdefine({_T_count},incr(_T_count))
T7,1
TOYLAND8
T17,89
getcolour_plus2cc85 7F __byte(incr(__parcount)) 20 FF FF 00 1A 20 __word($1) 00 43 18 FF FF 00 __word(255)
T6,61
_flagsifelse({$1},{},,{__byte(_addflagbits($1)) _flags(shift($@))})
T12,263
getparameterifelse($#,2,{ifelse(__wordflag,1,85 7F __byte($1) 00 FF FF, 81 7F __byte($1) 00 FF)  __byte(__count)
$2 define({__count},0)},dnl
$#,3,{ifelse(__wordflag,1,85 7F __byte($1) $2,81 7F __byte($1) $2) __byte(__count)
$3 define({__count},0)},{__error(ERR_NUMPAR {$0})})
T5,4
VALUE0x08
T12,5
TTD_BUILDING{2,3}
T9,37
ERR_LABELInvalid label {parameter} in function
T15,62
current_climate81 1A 20 01 14 03 00 FF __byte(__count)
$1 define({__count},0)
T11,2
TTDPATCHGUI-7
T11,53
__scanswordifelse({$1},{},,{__sword($1) __scansword(shift($@))})
T9,51
__decwordsubstr(eval($1,10,4),2,2) substr(eval($1,10,4),0,2)
F8,8
patsubstpatsubst
T7,93
grftextifelse({$1},NONE,{ifelse(__VERSION,08,cbr(0x400),{__error(ERR_INVALID {$0: $1})})},{cbr($1)})
T3,55
cbrdefine({__lastref},{__word($1+32768)}) __word($1+32768)
T8,27
__cutoffsubstr($1,0,2),substr($1,3)
T11,1088
spriteblockifelse($#,2,{ifelse($1,ALLOCATE,
{dnl __NUMBER * 5 0D __byte(__parcount+2) 00 __byte(__parcount+1) 00
__NUMBER * 9 0D __byte(incr(__parcount)) 00 00 FE FF 08 __word(_1_sprcount) // next free parameter
dnl __NUMBER * 5 0D __byte(__parcount+2) 02 __byte(__parcount+1) __byte(__parcount+2)
dnl __NUMBER * 0 06 __byte(incr(__parcount)) 02 03 FF // TEST fail for >254 sprites
_action6(_1_sprcount) // TEST OK
_actionA(_1_sprcount)},
substr($1,0,1),-,{__NUMBER * 0 05 __byte(__abs($1)) __byte(eval(_1_sprcount/_1_setcount))},
substr($1,0,1),+,{__NUMBER  * 0 01 __FEATURE 00 __xbyte(substr($1,1)) __xbyte(_1_setcount) __xbyte(eval(_1_sprcount/_1_setcount))},
{__NUMBER * 0 0A __byte(_1_setcount) __xbyte(eval(_1_sprcount/_1_setcount)) __word(ifelse(eval(len($1)>6),1,0,$1))})
$2},
dnl
$#,3,{ifelse(substr($1,0,1),-,{__NUMBER * 0 05 __byte(__abs($1)+0x80) __byte(eval(_1_sprcount/_1_setcount)) __byte($2)},ERR)
$3},
dnl
{__NUMBER  * 0 01 __FEATURE __bytesize(_1_setcount) __xbyte(eval(_1_sprcount/_1_setcount))
$1}) define({_1_setcount},0) define({__sprcount},_1_sprcount) define({_1_sprcount},0)
T8,22
register897D{}__byte($1){}00FF
T7,3
VERSION254
T9,44
setlimits"B" "LIMI" __word(8) __dword($1) __dword($2)
F7,7
includeinclude
T7,2
T_WHITE94
T4,1
OTTD1
T9,61
_scantextifelse({$1},{},,{_textentry($@)
_scantext(shift(shift($@)))})
T6,1
NORMAL0
T12,9
TTD_ROOFBOTH{4,5,6,7}
T3,32
xyz__byte($1) __byte($2) __byte($3)
T12,47
setparameter__NUMBER * 0 0D __byte($1) 08 00 FF __dword($2)
T8,1
AIRCRAFT8
T4,1
COAL1
T15,1
LC_TUNNELBRIDGE9
T6,35
__year__printyear(translit($1,{/-},{,,}))
T14,62
copytilelayout__NUMBER * 0 00 04 01 __byte($# -1) __byte($2) 0F _loop($#,$1)
T7,2
T_MAUVE97
T4,2
COCA23
T10,49
__printoutifelse({$1},{},,{$1 00 00
__printout(shift($@))})
T10,2
SPEEDLIMIT5D
T5,3
FIRST255
T10,1
RC_DEFAULT0
T10,63
plt_posrev__plt__(81 40 04 0F, 81 41 04 0F, 81 40 84 0F, 81 41 84 0F, $@)
T5,23
wires14 _nobits($@) _0_COUNT
T6,54
defsnd__NUMBER ** _11_defsnd($1) substr(PATH/$2,9) _11_COUNT
T8,54
__bridgeifelse({$1},{},,{__scanbyte2($1) __bridge(shift($@))})
T4,3
MENU255
T6,1
DESERT1
T9,5
CB_LAYOUT-0x14
T12,1
TZ_PERIPHERY1
T5,1
SOUTH2
T9,3
ROADSTOPS-17
T11,2
ONEWAYMARKS-9
T14,4
DP_VEHICLELIST0x12
T9,315
plt_edgesdnl
81 40 28 0F 12 1A 20 00 0B 1A 20 01 0A 1A 20 08 0E 1A 20 00 dnl
0F 40 24 0F 12 1A 20 00 0B 1A 20 01 0A 1A 20 04 0C 7D 00 20 0F 0E 1A 20 00 dnl
0F 40 2C 0F 12 1A 20 00 0B 1A 20 01 0A 1A 20 02 0C 7D 00 20 0F 0E 1A 20 00 dnl
0F 40 20 0F 12 1A 20 00 0B 1A 20 01 0C 7D 00 00 0F __byte(__count)
$1 define({__count},0)
T6,1
ARRIVE3
T17,175
shiftmask_add_divifelse($#,4,__byte($1+0x40) ifelse(eval($2>255),1,{define({__wordflag},1) __word($2) __word($3) __word($4)},{__byte($2) __byte($3) __byte($4)}),{__error(ERR_NUMPAR {$0}: $1)})
T3,78
setifelse($#,2,{define({$1},eval(__spritebase + _1_setcount)) $2},$1) _1_setCOUNT
T7,21
nowires14 _bits($@) _0_COUNT
T13,34
anim_triggers18 _0_COUNT _animationtriggers($@)
T6,31
_COUNTdefine({__count},incr(__count))
T10,3
AQUAEDUCTS-18
T11,29
_classnamesmaketext(0xC400+$1,shift($@))
T13,2
_INDUSTRYTILE09
T10,61
_11_defsnddefine({_S_$1},_11_label) define({_11_label},incr(_11_label))
T5,1
BPP323
T20,46
getothergrfparameter__NUMBER * 0 0D __byte($1) 00 __byte($3) FE $2
T8,1
INACTIVE0
T7,342
__plt__ifelse($#,5,{dnl simple case <function>(<block>)
$1 __byte(__count) 
$5 define({__count},0)},
$#,6,{dnl two parameters
ifelse($5,_SELF,$2,$3 $5) __byte(__count)
$6 define({__count},0)},
$#,7,{dnl <addmodulo>, _SELF, <block>
ifelse($6,_SELF,$4 $5,{__error(ERR_NUMPAR {$0})}) __byte(__count)
$7 define({__count},0)}, {__error(ERR_NUMPAR {$0})})
T8,54
__parnumifelse($1,2,0,$1,4,0,$1,8,0,$1,16,0,$1,32,0,$1,64,0,1)
T10,225
__longdatednl 
eval(($2 - $1)*365 + ($2 - $1)/4 - ($2 - $1)/100 +($2 - $1)/400dnl year
+ ifelse($3,1,0,$3,2,31,$3,3,59,$3,4,90,$3,5,120,$3,6,151,$3,7,181,$3,8,212,$3,9,243,$3,10,273,$3,11,304,$3,12,334,0)dnl month
+ ifelse($4,{},0,$4))
T13,29
_stationnamesmaketext(0xC500+$1,shift($@))
T9,68
getcolour85 7F __byte(incr(__parcount)) 20 FF FF 00 1A 00 __word($1) 00 00 00
T6,21
pylons11 _bits($@) _0_COUNT
T11,54
__countdownifelse(eval($1 < 1),1,,{$2{}__countdown(decr($1),$2)})
T20,9
TTD_PLATFORMBUILDING{0,1,2,3}
T12,2
TEMPSNOWLINE6A
F6,6
popdefpopdef
T14,94
_cbprintdouble__sbyte($1) __sbyte($2)  __scancbword(translit($3,{ },{,})) __scancbword(translit($4,{ },{,}))
T11,39
_1_setCOUNTdefine({_1_setcount},incr(_1_setcount))
T8,2
OILWELLS11
T6,4
LIQUID0x40
T8,138
plt_sizeifelse($#,1,{81 40 10 FF __byte(__count)
$1 define({__count},0)},81 {ifelse($1,_SELF,41,40) 10 FF __byte(__count)
$2 define({__count},0)})
T12,115
__checklabeldnl check for 4-character "labels"
ifelse(ifelse(len($1),4,regexp($1,\w*$),1),0,"$1",{__error(ERR_LABEL {$2})}dnl
)
T16,22
__remove_crlftabpatsubst({$1},{
},{ })
T11,186
spritestack89 __hidden
1A 20 ifelse($#,3,__word($1 & 0x7FFF) 00 80,__word($1 & 0x7FFF) 00 00) 0E 1A 00 __dword(256) 01
$2  00 00 00 00  00 00 00 00
$2 else define({__count,0}) define({__hidden},{})
T15,3
AIRPORTPREVIEWS-22
T12,213
__setentriesdnl
ifelse({$2},{},,{ifelse($2,ALL,dnl
ifelse($1,"T" "NAME",{define(__savename,$3)},$1,"T" "DESC",{define(__savedesc,$3)}))dnl
$1 __byte(0{x}{}__language($2)-0x80) $3 00 
__setentries($1,shift(shift(shift($@))))})
T11,138
plt_posevenifelse($#,1,{81 40 00 01 __byte(__count)
$1 define({__count},0)},81 {ifelse($1,_SELF,41,40) 00 01 __byte(__count)
$2 define({__count},0)})
T6,54
groundifelse($2,CUSTOM,__word(0x42D + $1) 00 80,__dword($1))
T6,209
_rangeifelse($#,1,{__bytewordflag($1) __bytewordflag($1)},dnl
$#,2,{ifelse($1,<,{__less(ifelse($2,{},0,$2))},$1,>,{__greater(ifelse($2,{},0,$2))})},dnl
{__bytewordflag($1) __bytewordflag(ifelse($3,{},0,$3))}) _COUNT
T10,1
__wordflag0
T13,24
bridge_height1B _0_COUNT __bridge($@)
T11,50
test_posrev81 10 04 0F __byte(__count)
$1 define({__count},0)
T10,33
_07_numbereval(ifelse(len($1),1,$1,0),16,2)
T10,3
TRAMTRACKS-11
T11,18
textmode_onchangecom({"},{"})
T11,108
_getoffsetsifelse(eval($1>0),1,{__byte(incr(__parcount)) 82 __byte($2+3) _getoffsets(eval($1 - SPR_COUNT),eval($2+3))})
T5,24
__seteval((255&(1<<$1)),16,2)
T11,1
__14numsets0
T8,50
test_pos81 10 00 0F __byte(__count)
$1 define({__count},0)
T12,50
__scandotextifelse({$1},{},,{$1 00 __scandotext(shift($@))} ) 
T6,767
WINMAP00 01 00 00 00 00 00 00 00 00 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f 60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f 90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef f0 f1 f2 f3 f4 f5 00 00 00 00 00 00 00 00 00 ff
T10,50
spritetype81 10 00 FF __byte(__count)
$1 define({__count},0)
T6,2
T_BLUE88
T18,182
__handleblockentryifelse($1,2,dnl
ifelse($2,11,__byte2dword($3),$2,14,__mixed2dword2($3),$2,17,__word2dword($3),$2,20,__byte2dword2($3),$3),
ifelse($2,11,__byte2word($3),$2,14,__mixed2word($3),$3)) $4
T8,16
reftxtcb__byte(_T_$1) 80
T8,0
__unix__
T13,2
BUILDONSLOPES4D
T12,62
__makenumberifelse(__checknumber($1),0,patsubst($1,{[^0-9a-fA-Fx-]},{}),0)
T10,3
TUNNELBASE-23
T9,44
ERR_PRICEMissing {engine type} to be used by function
T10,51
__scanwordifelse({$1},{},,{__word($1) __scanword(shift($@))})
T13,4
OFFSET_SPRITE0x02
T8,46
override__NUMBER * 0 03 __FEATURE 81 __xbyte($1) 00 $2
T14,49
_cbprintsingle00 __sbyte($1) __scancbword(translit($2,{ },{,}))
T9,5
OVERSIZED0x400
T10,64
soundtable__NUMBER * 3 11 __byte(_11_count) 00
 $1
 define({_11_count},0)

F8,8
__line____line__
T6,27
grfurl__setentries("T" "URL_",$@)
T10,50
game_level81 22 00 FF __byte(__count)
$1 define({__count},0)
T12,6
RCT_ELECTRIC0x4c3c
T12,100
current_date89 23 00 FF FF FF FF __byte(__count)
__postprocess(2,$1) define({__count},0){}define({__wordflag},0)
T14,40
__defaultglassifelse($1,{},__word(802),{{__word($1)}})
T15,1
LC_INDUSTRYTILE8
T13,4
DP_PREVIEWGUI0x21
T6,130
spriteifelse($#,2,{define({$1},_1_sprcount) ifelse($2,NULL,__NUMBER * 1 0,PATH/$2)}, ifelse($1,NULL,__NUMBER * 1 0,PATH/$1)) _1_sprCOUNT
T10,2
__collapse$*
T9,13
maymodify$1  $2 _COUNT
T8,62
_cbprintifelse($#,4,_cbprintdouble($1,$3,$2,$4),_cbprintsingle($1,$2))
T9,1
STEELMILL8
T10,54
__n_groundifelse($2,CUSTOM,__word(0x42D + $1) 00 80,__dword($1))
T14,30
__REVISIONHEAD"m4nfo header r113 27.05.2018"
T13,56
__checknumberregexp($1,{0$\|\(-?[1-9][0-9]*$\)\|\(0x[0-9a-fA-F]+$\)})
T8,2
T_PURPLE8C
T12,221
tinfo_statidifelse($#,3,{ifelse(__wordflag,1,85,81) 68 $1 $2 __byte(__count)
$3},$#,2,{ifelse(__wordflag,1,85 68 $1 00 FF FF,81 68 $1 00 FF) __byte(__count)
$2},{__error(ERR_NUMPAR "{$0}")}) define({__count},0) define({__wordflag},0)
T6,1
ARCTIC2
T9,13
parameter_p_{}eval($1)
T12,90
_printdouble__sbyte($1) __sbyte($2)  __scanword(translit($3,{ },{,})) __scanword(translit($4,{ },{,}))
T14,22
exclude_widths0C _bits1($@) _0_COUNT
T3,107
defifelse(eval($1 == 255),1,{__error(ERR_CID255 {$0})},{__NUMBER * 0 02 __FEATURE __byte($1) define({$2},$1)})
T11,4
DP_DEPOTGUI0x10
T12,311
__a_recolour__tileCOUNT dnl
ifelse(dnl
$#,3,{__word(0x842d + $1) __word(0x842d+$3)  00 00  $2},
$#,4,{__word(0x842d + $1) __word(0x842d+$4)  00 00  $2  $3},
$#,5,{__word(0x842d + $1) __word(0x842d+$3)  __word($4)  $2  $5},
$#,6,{__word(0x842d + $1) __word(0x842d+$4)  __word($5)  $2  $3  $6},
{__error(ERR_NUMPAR "{$0}")}) 
T5,22
flags13 _0_COUNT _flags($@)
T8,1
NOSPRITE0
T9,134
tiletypesifelse({$1},{},,{__byte(eval(__npar(__collapse($1))/__npar($1))) __byte(__npar($1)) __scanbyte(__collapse($1))  tiletypes(shift($@))})
T7,26
subtext81 __word(eval($1+0xD400))
T9,5
CB_ASPEED0x142
T9,2
NEWHOUSES59
T6,329
asl_ondnl
define({tile}, defn({__a_tile}))dnl
define({layout}, defn({__a_layout}))dnl
define({ground}, defn({__a_ground}))dnl
define({regular}, defn({__a_normal}))dnl
define({notransp}, defn({__a_notransp}))dnl
define({compcol}, defn({__a_compcol}))dnl
define({glass}, defn({__a_glass}))dnl
define({recolour}, defn({__a_recolour}))dnl

T11,53
__scansbyteifelse({$1},{},,{__sbyte($1) __scansbyte(shift($@))})
T7,3
SPECIAL254
T14,1
LC_STATIONTILE5
T10,50
test_total81 10 14 0F __byte(__count)
$1 define({__count},0)
F3,3
lenlen
T7,1
__count0
T6,5
__get2$1 $2
F6,6
ifelseifelse
T6,2
__get3$3
T9,622
__a_glass__tileCOUNT dnl
ifelse(dnl
$#,2,{__word(0x442d + $1) __word(0x8322)  00 00  $2},
$#,3,{ifelse(substr($2,6,2),80,{__word(0x442d + $1) __word(0x8000+$3)  00 00  $2},
{__word(0x442d + $1) __word(0x8322)  00 00  $2  $3})},
$#,4,{ifelse(substr($2,6,2),80,{__word(0x442d + $1) __word(0x8322)  __word($3)  $2  $4},
{__word(0x442d + $1) __word(0x8000+$4)  00 00  $2  $3})},
$#,5,{ifelse(substr($2,6,2),80,{__word(0x442d + $1) __word(0x8000+$3)  __word($4)  $2  $5},
{__word(0x442d + $1) __word(0x8322)  __word($4)  $2  $3  $5})},
$#,6,{__word(0x442d + $1) __word(0x8000+$4)  __word($5)  $2  $3  $6},
{__error(ERR_NUMPAR "{$0}")}) 
T5,1
LEAVE4
T4,2
COLA22
T11,5
CB_AISELECT-0x18
T9,128
randomabsifelse(__parnum(eval($#-2)),0,{83 __byte($1) __byte($2) eval($#-2,16,2) __scan(shift(shift($@)))},{__error(ERR_NUMPAR "{$0}")} )
T9,5
CB_AFRAME0x141
T4,1
WEST1
T12,47
_printsingle00 __sbyte($1) __scanword(translit($2,{ },{,}))
T11,67
__scantableifelse({$1},{},,{__extract({$1}) __COUNTUP __scantable(shift($@))})
T5,15
cbset_cbprint($1,$2)
T10,4
RUN_DIESEL0x2B
T8,2
CATENARY-5
T4,2
TOFF21
T11,2
FOUNDATIONS-6
T8,17
aslflags__scanaddlist($1)
T10,66
__bytesizeifelse(eval($1 > 255),1,{__error(ERR_BYTESIZE "{$0}")},__byte($1))
T12,4
PIXOFFSET_XY0x30
T7,1
LC_ROAD2
T9,50
test_axis81 10 18 01 __byte(__count)
$1 define({__count},0)
T4,16
lots$#{,} __scan($@)
T9,67
addmoduloifelse($#,2,{__byte($1) __byte($2)},{__error(ERR_NUMPAR {$0}: $1)})
T8,2
T_ORANGE8E
T5,24
__clreval((255^(1<<$1)),16,2)
T4,3
wordw$1
T7,2
_BRIDGE06
T10,54
grfpalette"B" "PALS" __word(1) ifelse($1,DOS,"D",$1,WIN,"W","A")
T5,46
class08 __scan($@) define({_0_numstat},$#) _0_COUNT
T6,46
cbfaildefine({__lastref},{__word(255)}){}__word(255)
T4,8
T_Gf9A 0E 02
T4,53
moveifelse($1,{},{00{,}{}},{__byte($#){,}__scanword($@)})
T10,1
_0_layouts0
T4,2
GOLD10
T5,1
FALSE0
T8,1
WC_RIVER3
T14,37
ERR_ALLOCUMASKCannot change allocation of user mask
T6,3
A_NEXT254
T11,104
colourtable__NUMBER * 257 00
ifelse($#,1,
$1,{define({MAP},{$1}) __replace(shift($@)) undefine({MAP})}) _1_sprCOUNT
T11,1
_1_sprcount0
T12,4
BUILD_TUNNEL0x08
T4,8
T_Gm9A 0E 01
T4,8
T_Gn9A 0E 03
T11,144
_getaddressifelse(eval($1>0),1,{ifelse(eval($1<SPR_COUNT),1,__byte($1),__byte(SPR_COUNT)) __word($2) _getaddress(eval($1 - SPR_COUNT),eval($2+SPR_COUNT))})
T4,8
T_Gp9A 0E 04
T8,44
ERR_TYPEInvalid {enginetype} {parameter} in function
T14,51
AI_stationsize81 88 00 FF __byte(__count) 
$1 define({__count},0)
T17,124
randomallocspritedefine({__hidden},
{7F __byte(incr(__parcount)) 20 FF FF FF FF 00 5F 28 __mask(_term2($1)) 00 00 00 00}) __start(_term2($1))
T10,63
plt_length__plt__(81 40 10 0F, 81 41 10 0F, 81 40 90 0F, 81 41 90 0F, $@)
T10,2
__parcount-1
T7,11
setnamegrfname($@)
T4,1
SNOW4
T8,23
nopylons11 _nobits($@) _0_COUNT
T6,27
__less00 __bytewordflag(decr($1))
T10,1
RAINFOREST2
T14,50
servicedbytype81 8A 01 1F __byte(__count)
$1 define({__count},0)
T9,2
NEWCARGOS6B
T13,20
freetextstackdefine({_T_count},0)
T9,1
TEMPERATE1
T4,2
FOOD12
F8,8
traceofftraceoff
T7,69
__swordsubstr(eval(__xtrim($1),16,4),2,2) substr(eval(__xtrim($1),16,4),0,2)
T8,2
_STATION04
T6,767
DOSMAP00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f 60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f 90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff
T4,1
GOOD5
T10,4
DEL_BRIDGE0x1D
T12,138
plt_tiletypeifelse($#,1,{81 40 18 0F __byte(__count)
$1 define({__count},0)},81 {ifelse($1,_SELF,41,40) 18 0F __byte(__count)
$2 define({__count},0)})
T18,21
__makepropertylist$1 __countdown($3,$2)
T11,25
percentwordword(0) .. eval(655 * $1)
T6,36
__term__range(patsubst($1,{ +\.\. +},{,}))
T4,1
LVST4
T7,27
grfname__setentries("T" "NAME",$@)
T12,4
BUILD_SIGNAL0x03
T14,90
cargomapspritedefine({__hidden},{7F __byte(incr(__parcount)) 20 FF FF FF FF 00 47 20 FF 00 00 00 00}) $1
T9,78
ERR_MATCHNumber of substitute building types does not match building's size in function
T12,55
__scancbwordifelse({$1},{},,{__cbword($1) __scancbword(shift($@))})
T16,97
tinfo_trackexist81 45 08 ifelse($#,2,{__byte($1) __byte(__count)
$2},{FF __byte(__count)
$1}) define({__count},0)
T11,39
__tileCOUNTdefine({__tilecount},incr(__tilecount))
T11,50
trafficside81 06 00 10 __byte(__count)
$1 define({__count},0)
T6,2
_TRAIN00
T4,2
DIAM10
T4,2
CORE14
T3,5
sub%%%$1
T4,4
NONE0x00
T12,16
grfparameter"C" "PARA"
$1
00
T10,51
__scanbyteifelse({$1},{},,{__byte($1) __scanbyte(shift($@))})
T7,6
NONPOUR0x1000
T8,1
LC_HOUSE3
T6,1
FOREST3
T18,89
tinfo_trackconnect81 45 ifelse($#,2,{$1 __byte(__count)
$2},{00 FF __byte(__count)
$1}) define({__count},0)
T10,3
SNOWYTREES-12
T4,154
__opifelse($1,:=,00,$1,+,01,$1,-,02,$1,*,03,$1,S*,04,$1,<<,05,$1,S<<,06,$1,AND,07,$1,OR,08,$1,/,09,$1,S/,0A,$1,MOD,0B,$1,SMOD,0C,{__error(ERR_IOP "{pcalc}")})
T9,30
__numvehsifelse($#,1,1,eval($2 -$1 +1))
T9,26
ERR_VEHIDInvalid veh-ID in function
T8,4
BUILD_RV0x12
T5,41
__maxifelse(eval($1 > $2),1,{define({$2},$1)})
T8,0
notransp
F3,3
dnldnl
T8,109
callbackifelse(__wordflag,1,85 0C 00 FF FF,81 0C 00 FF) __byte(__count)
$1 define({__count},0) define({__wordflag},0)
T10,246
__a_grounddnl
ifelse(
$#,1,{__dword($1)  00 00},
$#,2,{ifelse($2,CUSTOM,{__word(0x42d + $1) 00 80  00 00 },{__error(ERR_INVALID "{$0}")} )},
$#,3,{__dword($1)  __word($2)  $3},
$#,4,{__word(0x42d + $1) 00 80  __word($3)  $4},
{__error(ERR_NUMPAR "{$0}")}) 
T4,1
WHEA6
T8,50
leapyear81 02 0F 01 __byte(__count)
$1 define({__count},0)
F10,10
changewordchangeword
T8,67
__cbwordsubstr(eval($1 + 32768,16,4),2,2) substr(eval($1 + 32768,16,4),0,2)
T13,32
grfminversion"B" "MINV" __word(4) __dword($1)
T6,59
_bits1ifelse({$1},{},,{__byte(__sumbits1($1)) _bits1(shift($@))})
T4,1
EXIT0
T9,4
RUN_PLANE0x2D
T4,1
IORE8
T9,126
yearbuilt85 FA 20 FF FF  08 1A 20 6D 01  00 1A 00 80 07 __byte(__count) 
__postprocess(1,$1) define({__count},0) define({__wordflag},0)
T10,69
classnamesifelse({$2},{},,{_classnames($1,$2) classnames($1,shift(shift($@)))})
T5,50
month81 02 00 FF __byte(__count)
$1 define({__count},0)
T8,6
RCT_SHIP0x4c4e
T7,2
DYNAMIC78
T8,138
plt_evenifelse($#,1,{81 40 08 01 __byte(__count)
$1 define({__count},0)},81 {ifelse($1,_SELF,41,40) 08 01 __byte(__count)
$2 define({__count},0)})
T3,1
BUS2
T10,50
randombits81 10 00 FF __byte(__count)
$1 define({__count},0)
T9,316
calculatedefine({__save},__count) ifelse($#,2,89 __calcscan(patsubst({$1},{[ 
]+},{,})) __byte(__save)
__postprocess(2,$2),
$#,3,ifelse($2,_ENGINE,8A,89) __calcscan(patsubst({$1},{[ 
]+},{,})) __byte(__save)
__postprocess(2,$3),{__error(ERR_NUMPAR {$0})}) define({__count},0) define({__wordflag},0) define({__calcwordflag},0)
T8,37
_action6__NUMBER * 0 06 _getoffsets($1,0){}FF
T6,4
RUN_RV0x2E
T7,177
settype
"B" "TYPE" __word(1) ifelse($1,BOOL,__byte(1),$1,ENUM,__byte(0),{__error(ERR_INVALID {$0}: $1)})
"B" "MASK" __word($#-1) __byte($2) __byte($3) __byte($4) __max($2,{__parcount})
T6,10
refsndcbr(_S_$1)
T10,34
__hex2word{0x}substr($1,2,2){}substr($1,0,2)
T8,2
T_YELLOW90
T4,65
linkifelse($2,{},,{__byte($2) $1 _3_COUNT link($1,shift(shift($@)))})
T8,21
nontrack15 _bits($@) _0_COUNT
T10,62
copylayout__NUMBER * 0 00 04 01 __byte($# -1) __byte($2) 0A _loop($#,$1)
T10,35
anim_speed17 _scanclampbyte(0,16,$@) _0_COUNT
T7,1
FACTORY6
T4,85
tileifelse($#,2,{define({$1},_0_layouts) $2},$1) define({_0_layouts},incr(_0_layouts)) 80
T6,143
randomifelse(__parnum(eval($#-2)),0,{80 __byte(__anim2random($1)) __byte($2) eval($#-2,16,2) __scan(shift(shift($@)))},{__error(ERR_NUMPAR "{$0}")} )
T8,85
__n_tileifelse($#,2,{define({$1},_0_layouts) $2},$1) define({_0_layouts},incr(_0_layouts)) 80
T7,4
EXPRESS0x04
T11,4
BUILD_DEPOT0x05
T4,1
BPP88
T7,1
LC_VOID7
T9,1021
__processdnl
define({__addmask},{ifelse(substr($1,0,2),81,FF 00 00 00,substr($1,0,2),85,FF FF 00 00,substr($1,0,2),89,FF FF FF FF)})dnl
ifelse(
dnl operators
$1,+,00,
$1,-,01,
$1,SMIN,02,
$1,SMAX,03,
$1,MIN,04,
$1,MAX,05,
$1,/,06,
$1,MOD,07,
$1,s/,08,
$1,sMOD,09,
$1,*,0a,
$1,AND,0b,
$1,OR,0c,
$1,XOR,0d,
$1,STORE,0e,
$1,RESTORE,0f,
$1,ROR,11,
$1,SCMP,12,
$1,CMP,13,
$1,<<,14,
$1,>>,15,
$1,S>>,16,
dnl vars
eval(len($1)>7),1,{ifelse(substr($1,0,1),8,{substr($1,2,2) dnl a function call
ifelse(substr($1,2,1),6,{substr($1,4,2) __byte({0x}substr($1,6,2)+$2) __addmask($1)}, 
substr($1,2,1),7,{substr($1,4,2) __byte({0x}substr($1,6,2)+$2) __addmask($1)},dnl 60+x functions
substr($1,2,2),0E,{1A __byte({0x}substr($1,6,2)+$2) __dword({0x}substr($1,8,2)) 0F},dnl store
__byte({0x}substr($1,4,2)+$2) __addmask($1))},dnl normal functions
{__inflate(substr($1,2,eval(substr($1,0,2)-2))){}__byte($2) __inflate(substr($1,eval(substr($1,0,2)+2)))})},dnl custom function
dnl fall through: plain number
1A __byte($2) __dword(__makenumber($1)))
T6,2
__npar$#
T4,1
WOOD7
T8,54
_actionA__NUMBER * 0 0A __byte(_numsets($1)) _getaddress($1,0)
T6,2
_HOUSE07
T5,6
TRICK0x8000
T11,1
DP_VIEWPORT0
T9,128
randomrelifelse(__parnum(eval($#-2)),0,{80 __byte($1) __byte($2) eval($#-2,16,2) __scan(shift(shift($@)))},{__error(ERR_NUMPAR "{$0}")} )
T8,33
_0_COUNTdefine({_0_count},incr(_0_count))
T7,2
_SIGNAL0e
T24,61
railtypetranslationtable__NUMBER * 0 00 08 01 __byte($#) 00 12
translit({$@},{,},{ })
T18,20
getowngrfparameterPARAMETER,__byte($1)
T7,2
T_LGRAY89
T10,45
ERR_CCLASSInvalid {cargo} class {parameter} in function
T7,28
setpathdefine({PATH},{__NUMBER $1})
T10,300
anim_frameifelse(__wordflag,1,85,81) ifelse($#,1,{4A 00 FF __byte(__count)
$1},$#,2,{ifelse(len($1),2,{66 $1 00 FF},{4A $1}) __byte(__count)
ifelse(__wordflag,1,__postprocess(1,$2),$2)},$#,3,{66 $1 $2 __byte(__count)
__postprocess(1,$3)},{__error(ERR_NUMPAR "{$0}")}) define({__count},0) define({__wordflag},0)
T5,3
A_NOP253
T8,133
recolourifelse(substr($2,6,2),80,
$2 00 00 00 __word(0x842D + $1) __defaultglass($3), dnl SHARE
$2 $3 __word(0x842D + $1) __defaultglass($4))
T4,172
dateifelse(index($1,{/}),-1,{ifelse(index($1,{-}),-1,{__error(ERR_INVALID {$0}: $1)},{__longdate(0,__reverse(translit($1,{/-},{,,})))})},{__longdate(0,translit($1,{/-},{,,}))})
T6,34
deftxt_T_deftxt($1) _scantext(shift($@))
T17,72
_setcargotriggersifelse({$1},{},,{_addsetcargotriggers($1) _setcargotriggers(shift($@))})
T15,4
CUSTOM_RCSPRITE0x08
T10,72
_textentry__NUMBER * 0 04 __FEATURE __language($1) 01 __byte(_T_count -1) D0 $2 00
T13,99
__mixed2dword__ref($1) __dword(__byteval1($1)) ifelse(__wordval2($1),0xffff,FF FF FF FF,__dword(__wordval2($1)))
T9,35
_11_COUNTdefine({_11_count},incr(_11_count))
T14,35
ERR_NOLANGUAGEInvalid language symbol in function
T5,2
ABORT83
T9,35
__greater__bytewordflag(incr($1)) __makehi()
T8,158
randomcb80 __byte(__scanaddlist($2)) __byte($3) __byte($#-3,16,2)  __scan(shift(shift(shift($@))))
 define({_R_$1},{__byte(__scanaddlist($2)),__byte($3),eval($#-3)}) 
T13,4
DP_VEHICLEGUI0x11
T8,1
WC_CANAL2
T4,2
SHIP10
T8,2
_AIRPORT0d
T9,6
RCT_STEAM0x4c30
T8,4
RUN_SHIP0x2F
T7,3
OTTDGUI-21
T16,53
tinfo_waterclass81 67 $1 0D 03 __byte(__count)
$2 define({__count},0)
T15,4
DP_PURCHASELIST0x20
F7,7
pushdefpushdef
T7,32
__trailpatsubst($1,{[^0-9a-fA-f]+$},{})
T13,211
setproperties dnl
__NUMBER * 0  00 __FEATURE 01 __byte(__numvehs(__terms($1))) __firstveh(__terms($1))
        __makepropertylist(__cutoff(__cutatcrlf($2)),__numvehs(__terms($1)))
define({_0_count},0) dnl reset prop counter

T10,23
__getrangeifelse($#,1,$1,{$1,$3})
T13,1
PRINTINGWORKS7
T8,5
reflabel_L_$1
T9,63
plt_total__plt__(81 40 14 0F, 81 41 14 0F, 81 40 94 0F, 81 41 94 0F, $@)
T12,2
PBSIGNALLING63
T5,133
glassifelse(substr($2,6,2),80,
$2 00 00 00 __word(0x442D + $1) __defaultglass($3), dnl SHARE
$2 $3 __word(0x442D + $1) __defaultglass($4))
T14,26
tiletypelayout0E __printout($@) _0_COUNT
T8,39
patchvar__NUMBER * 0 0D 01 00 $1 FE FF FF 00 00
T20,2
SIGNALSONTRAFFICSIDE3B
T8,51
AI_cargo81 81 00 FF __byte(__count) 
$1 define({__count},0)
T4,4
POST0x02
T5,141
error__NUMBER * 0 0B $1 ifelse($2,US,00,$2,UK,01,$2,D,02,$2,F,03,$2,E,04,$2,RUS,07,$2,SRB,0D,$2,NL,1F,$2,I,27,$2,S,2E,$2,HR,38,$2,ALL,7F) $3 $4 00
T8,33
_3_COUNTdefine({_3_count},incr(_3_count))
T8,55
deflabeldefine({_L_$1},__label) define({__label},incr(__label))
T9,133
__n_glassifelse(substr($2,6,2),80,
$2 00 00 00 __word(0x442D + $1) __defaultglass($3), dnl SHARE
$2 $3 __word(0x442D + $1) __defaultglass($4))
T10,4
DEL_SIGNAL0x1C
T12,5
TTD_ROOFLEFT{4,5}
T9,2
MULTIHEAD06
T9,41
menuvalue__setentries({"T" __dword($1)},shift($@))
T12,4
BUILD_BRIDGE0x04
T9,124
__foreachifelse(eval($#>2),1,
{pushdef({$1},{$3}){}$2{}popdef({$1})dnl
ifelse(eval($#>3),1,{$0({$1},{$2},shift(shift(shift($@))))})})
T8,1
_T_count0
T13,4
BUILD_ENGINES0x0F
F6,6
formatformat
T7,41
__sbyteeval(ifelse(len($1),0,0,__trim($1)),16,2)
T4,1
GRAI6
T5,34
_term_range(_term3(_term2(_term1($1))))
T11,89
__byte2word__ref($1) __word(__byteval1($1)) ifelse(__byteval2($1),0xff,FF FF,__word(__byteval2($1)))
T17,67
_07_conditiontypeifelse($1,BITSET,00,$1,BITCLR,01,$1,==,02,$1,!=,03,$1,<,04,$1,>,05)
T11,25
percentbyte0 .. eval(255 * $1 / 100)
T8,52
triggersifelse($1,{},0,{eval($1 +__scanaddlist(shift($@)))})
T11,41
__printyearifelse(len($1),4,$1,ifelse(len($3),4,$3))
T9,8
__reverse$3,$2,$1
T9,51
_T_deftxtifdef({_T_$1},,{define({_T_$1},_T_count) _T_COUNT})
T10,50
iswaypoint81 8A 06 01 __byte(__count)
$1 define({__count},0)
T14,27
grfdescription__setentries("T" "DESC",$@)
T16,51
AI_stationlength81 88 00 0F __byte(__count) 
$1 define({__count},0)
T6,16
little$#{,} __scan($@)
T8,131
__a_tile__byte(0x40+__tilecount)
ifelse($#,2,{define({$1},_0_layouts) $2},$1) define({_0_layouts},incr(_0_layouts)) define({__tilecount},0)
T11,53
tinfo_water81 67 $1 09 01 __byte(__count)
$2 define({__count},0)
T5,1
NORTH8
T5,1
TRAIN1
T10,20
__compresstranslit($1,{ }{
},)
T7,2
_OBJECT0f
T18,50
_07_activationtypeifelse($1,+,06,$1,-,07,$1,-+,08,$1,++,09,$1,--,0A)
T4,1
MAIL2
T7,2
WARNING01
T10,4
DEL_TUNNEL0x21
T4,2
CAND20
T9,99
shiftmaskifelse($#,2,__byte($1) ifelse(eval($2>255),1,__word($2),__byte($2)),{__error(ERR_NUMPAR {$0}: $1)})
T6,294
_pcalc__NUMBER * 0 ifelse(
$#,3,{__assignment($@)},dnl
$#,4,{ifelse($3,NOT,{0D __parval($1) 02 FF __parval($4) FF FF FF FF},{__error(ERR_IOP "{pcalc}")})},dnl
$#,5,{0D __parval($1) __op($4) __parval($3) __parval($5) ifdef({__val},{__dword(__val) undefine({__val})},)},{__error(ERR_NUMPAR "{pcalc}")})
T8,1
TTDPATCH0
T4,2
BANK12
T18,2
ELECTRIFIEDRAILWAY3C
T15,50
timesinceunload81 ED 00 FF __byte(__count)
$1 define({__count},0)
T10,169
__n_normalifelse(substr($2,6,2),80,
$2 00 00 00 ifelse($3,TTD,__word($1) 00 80,__word(0x42D + $1) 00 00), dnl SHARE
$2 $3 ifelse($4,TTD,__word($1) 00 80,__word(0x42D + $1) 00 00))
T11,128
makettdtext
__NUMBER * 0 04 48 __language($2) __byte(__npar(shift(shift($@)))) __word($1)
_text(__npar(shift(shift($@))),shift(shift($@)))

T12,89
__assignment0D __parval($1) __op($2) ifelse(substr($3,0,3),_p_,{__parval($3) 00},{FF FF __dword($3)})
T9,2
T_LORANGE8A
T12,4
RUN_ELECTRIC0x2C
T12,37
setrefitcost__setrefitcost(patsubst($1,{ +},{,}))
T10,4
BUILD_SHIP0x13
T13,2
BUILDONCOASTS55
T9,1
__CTindex0
T4,1
MAIZ6
T7,73
forloopifelse($#,3,{__for($1,patsubst($3,{ +\.\. +},{,}),{$2})},{__foreach($@)})
T3,2
DOS00
T8,25
__lobytesubstr(eval($1,16,4),2,2)
T7,3
RC_NONE775
T6,2
_CARGO0b
F9,9
debugmodedebugmode
T11,31
ERR_INVALIDInvalid {parameter} in function
T9,14
registers__scanbyte($1)
T12,17
TTD_ALLTILES{0,1,2,3,4,5,6,7}
T9,4
DEL_DEPOT0x1E
T8,1
COALMINE0
T11,106
makevehicle__NUMBER * 0 03 __FEATURE ifelse($#,1,00 00 $1,{01 __xbyte($1) __byte(_3_count)
	$2})
define({_3_count},0)
T8,2
T_LGREEN91
T7,5
COVERED0x200
T7,16
__start0{x}{}__byte($1)
T7,1
PBSNONE2
T7,2
_GLOBAL08
T8,58
basecostifelse({$1},{},,
{__incrbasecost($1)
basecost(shift($@))})
T7,50
pbsinfo81 44 00 07 __byte(__count)
$1 define({__count},0)
T18,23
_07_cargoavailableifelse($1,+,0C,$1,-,0B)
T6,51
__wordsubstr(eval($1,16,4),2,2) substr(eval($1,16,4),0,2)
T13,89
test_position81 10 20 0F 0E 1A 20 00 0F 10 24 F0 0C 7D 00 00 FF __byte(__count)
$1 define({__count},0)
T5,2
TRAMS74
T4,2
TOYS18
T7,38
__terms__getrange(_term3(_term2(_term1($1))))
T11,1
PBSRESERVED7
# End of frozen state file
